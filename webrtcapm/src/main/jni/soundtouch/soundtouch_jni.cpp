//
// Created by xzl on 2018/7/17.
//

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <android/log.h>
#include <stdio.h>
#include <string.h>
#include <functional>

using namespace std;

#ifdef __cplusplus
extern "C" {
#endif

#include "ijksoundtouch_wrap.h"

#define JNI_API(retType, funName, ...) extern "C"  JNIEXPORT retType Java_com_chenqiao_webrtcapm_SoundTouchJni_##funName(JNIEnv* env, jclass cls,__VA_ARGS__)
#define JNI_API1(retType, funName) extern "C"  JNIEXPORT retType Java_com_chenqiao_webrtcapm_SoundTouchJni_##funName(JNIEnv* env, jclass cls)


JNI_API1(jlong,ijk_1soundtouch_1create){
    return (jlong) ijk_soundtouch_create();
}

JNI_API(void ,ijk_1soundtouch_1destroy,jlong ctx){
    ijk_soundtouch_destroy((void *)ctx);
}

JNI_API(jint ,ijk_1soundtouch_1translate,
        jlong ctx,
        jbyteArray data,
        jint offset,
        jint len,
        jfloat speed,
        jfloat pitch,
        jint bytes_per_sample,
        jint n_channel,
        jint n_sampleRate){

    uint8_t *data_ptr = reinterpret_cast<uint8_t *>(env->GetByteArrayElements(data, 0));
//    for(int i = 0 ; i < len / 2 ; ++i){
//        short *ptr = reinterpret_cast<short *>(data_ptr + i * 2);
//        *ptr = (data_ptr[i * 2] | (data_ptr[i * 2 + 1] << 8));
//    }

    int ret = ijk_soundtouch_translate((void *)ctx,(short *)(data_ptr + offset),speed,pitch,len / 2,bytes_per_sample,n_channel,n_sampleRate);
    env->ReleaseByteArrayElements(data, reinterpret_cast<jbyte *>(data_ptr), 0);
    return ret;
}


#ifdef __cplusplus
}
#endif
